const { createClient } = require('@supabase/supabase-js');
require('dotenv').config({ path: '.env.local' });

const supabaseUrl = process.env.EXPO_PUBLIC_SUPABASE_URL;
const supabaseAnonKey = process.env.EXPO_PUBLIC_SUPABASE_ANON_KEY;

console.log('üîç Verificando conexi√≥n con Supabase...');
console.log('URL:', supabaseUrl ? '‚úì Configurada' : '‚úó Falta');
console.log('Key:', supabaseAnonKey ? '‚úì Configurada' : '‚úó Falta');

if (!supabaseUrl || !supabaseAnonKey) {
  console.error('\n‚ùå Faltan variables de entorno necesarias');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseAnonKey);

async function testConnection() {
  try {
    // Intentar obtener las categor√≠as (tabla p√∫blica)
    const { data, error } = await supabase
      .from('video_categories')
      .select('name')
      .limit(1);

    if (error) {
      console.error('\n‚ùå Error de conexi√≥n:', error.message);
    } else {
      console.log('\n‚úÖ Conexi√≥n exitosa con Supabase!');
      if (data && data.length > 0) {
        console.log('üìä Datos de prueba obtenidos:', data[0].name);
      }
    }

    // Verificar si la tabla profiles existe
    const { count, error: profileError } = await supabase
      .from('profiles')
      .select('*', { count: 'exact', head: true });

    if (profileError) {
      console.log('\n‚ö†Ô∏è  Tabla profiles:', profileError.message);
    } else {
      console.log(`‚úÖ Tabla profiles existe (${count || 0} registros)`);
    }

  } catch (err) {
    console.error('\n‚ùå Error general:', err);
  }
}

testConnection();